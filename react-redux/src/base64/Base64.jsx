import React, {useState} from 'react'

const base64 = '';

const Base64 = () => {
  const [base, setBase] = useState('');
  const [url, setUrl] = useState('#')
  const [file, setFile] = useState('');
 // const handleImage = () => setBase(`data:image/jpeg;base64,${base64}`);

  const handleInput = async(e) => {
  const image = URL.createObjectURL(e.target.files[0])
  console.log(image)
setUrl(image)
    // setFile(e.target.files[0]);
    // const myFile = e.target.files[0]
    // const reader = new FileReader();
    // reader.readAsDataURL(myFile);
    // reader.onload = () =>{
    //    console.log('bien', reader.result);
    //    setUrl(reader.result)
    // }
    // reader.onerror = (err) => console.log('mal', err);
  }

  const handleSendImage = async() => {
    const formData = new FormData();
    formData.append('file', file );
    formData.append('name', 'Mi imagen' );

    const res = await axios.post(
      res,
      formData,
      {
          headers: {
              'Content-Type': 'multipart/form-data'
          },
          onUploadProgress (e) {
              let progress = Math.round((e.loaded * 100.0) / e.total);
              console.log(progress);
              imageUploadbar.setAttribute('value', progress);
          }
      }
  );

  }

  return (
    <div>
      {/* <img src={base} alt=" imagen" />
      <button onClick={handleImage}  >Show image</button> */}
      <hr />
      <input type="file" name="" id="" accept='image/*' onChange={handleInput} />
      <img src={`${url}`} alt="" />

     <button onClick={handleSendImage} >sendImage</button> 
    </div>
  )
}

export default Base64